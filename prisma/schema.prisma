generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id          String     @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  properties  Property[]
  users       User[]     // Users belonging to this organization
}

model Property {
  id             String           @id @default(cuid())
  name           String
  description    String?
  address        String
  organizationId String
  organization   Organization     @relation(fields: [organizationId], references: [id])
  rooms          Room[]
  userRoles      UserPropertyRole[] // For ABAC
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

model Room {
  id          String   @id @default(cuid())
  name        String
  type        String   // e.g., bedroom, kitchen, etc.
  floor       Int?
  propertyId  String
  property    Property @relation(fields: [propertyId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id             String           @id @default(cuid())
  email          String?         @unique
  googleId       String?         @unique
  phoneNumber    String?         @unique
  isPhoneVerified Boolean        @default(false)
  password       String?
  name           String
  organizationId String
  organization   Organization    @relation(fields: [organizationId], references: [id])
  propertyRoles  UserPropertyRole[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model Role {
  id            String           @id @default(cuid())
  name          String          @unique // e.g., ADMIN, MANAGER, VIEWER
  description   String?
  permissions   Permission[]
  userRoles     UserPropertyRole[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Permission {
  id          String    @id @default(cuid())
  action      String    // e.g., CREATE, READ, UPDATE, DELETE
  entityType  String    // e.g., PROPERTY, ROOM
  attributes  Json?     // Additional ABAC attributes
  roles       Role[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([action, entityType])
}