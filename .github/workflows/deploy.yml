name: Deploy to EKS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: darpo-api
  EKS_CLUSTER: darpo-dev
  ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_ARN }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: development

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: ${{ env.ROLE_TO_ASSUME }}
        role-duration-seconds: 1200

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.0'

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name $EKS_CLUSTER --region $AWS_REGION

    - name: Create namespace if not exists
      run: |
        kubectl create namespace darpo-dev --dry-run=client -o yaml | kubectl apply -f -

    - name: Create secrets
      run: |
        echo "${{ secrets.DATABASE_URL }}" | base64 > db_url.txt
        kubectl create secret generic app-secrets \
          --namespace darpo-dev \
          --from-file=DATABASE_URL=db_url.txt \
          --dry-run=client -o yaml | kubectl apply -f -
        rm db_url.txt

    - name: Update kustomize image
      run: |
        cd k8s/overlays/dev
        kustomize edit set image ${{ steps.build-image.outputs.image }}

    - name: Deploy to EKS
      run: |
        kubectl apply -k k8s/overlays/dev/

    - name: Verify deployment
      run: |
        kubectl rollout status deployment/darpo-api -n darpo-dev